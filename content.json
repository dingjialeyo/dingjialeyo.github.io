{"meta":{"title":"童乐三三","subtitle":"","description":"","author":"童乐三三","url":"http://yoursite.com","root":"/"},"pages":[],"posts":[{"title":"分享一篇Express","slug":"分享一篇Express","date":"2020-03-31T11:38:27.056Z","updated":"2020-03-31T10:58:26.402Z","comments":true,"path":"2020/03/31/分享一篇Express/","link":"","permalink":"http://yoursite.com/2020/03/31/%E5%88%86%E4%BA%AB%E4%B8%80%E7%AF%87Express/","excerpt":"","text":"Express框架基于Node开发的一款应用框架 安装 如果你已经安装了Node.js,接下来为你的应用创建一个目录，然后进入此目录并作为当前工作目录 12$ mkdir myapp$ cd myapp 通过 npm init 命令为你的应用创建一个 package.json 文件。 1$ npm init 命令将要求你输入几个参数，例如此应用的名称和版本。 你可以直接按“回车”键接受大部分默认设置即可 接下来在 myapp 目录下安装 Express 并将其保存到依赖列表中。如下： 1$ npm install express --save 果只是临时安装 Express，不想将它添加到依赖列表中，可执行如下命令： 1$ npm install express --no-save Hello World Express 1234567const express = require('express')const app = express()const port = 3000app.get('/', (req, res) =&gt; res.send('Hello World!'))app.listen(port, () =&gt; console.log(`Example app listening on port $&#123;port&#125;!`)) 执行命令 1$ node index.js 即可在浏览器地址上访问 http://localhost:3000/ 一个简单的Express框架的模板就搭建好了！","categories":[],"tags":[]},{"title":"我的第一篇博客文章","slug":"分享一篇小知识","date":"2020-02-08T07:38:41.000Z","updated":"2020-03-31T11:23:34.269Z","comments":true,"path":"2020/02/08/分享一篇小知识/","link":"","permalink":"http://yoursite.com/2020/02/08/%E5%88%86%E4%BA%AB%E4%B8%80%E7%AF%87%E5%B0%8F%E7%9F%A5%E8%AF%86/","excerpt":"","text":"总结：Git 操作命令 git init xxx //创建并使 xxx 为 git 仓库 git status //查看仓库状态 git add //将所以修改的文件添加到暂存区 git commit -m “xxxxxx” //提交版本 xxxxx 表示描述 git log //查看版本记录 q 退出 j 往下看 k 往上看/gir log -p 查看具体操作：添加或减少== git checkout xxx //穿越到某个节点 xxx 表示身份证号也可以是标签 tag 穿越后内容会改为指定节点时的内容 git checkout - //回到上一个节点 git tag -a x -m”xxx” //创建 x 标签名 -注释 xxx git log –oneline //最近一次提交的信息 git branch xxx //创建分支 xxx 为分支名 git checkout xxx 切换到该分支 master 默认分支主分支 git log –all –graph //图示全部历史记录 git checkout -b xxx //创建分支 xxx 并且切换到 xxx 这个分支上 git merge xxx //合并分支 与主分支合并 xxx 为分支名 git remote add xx xxxxxx //添加到远程仓库 xx 为自己设定的名字 xxxxxx 为远程地址 git remote //列出所有远程仓库名称 xx git push -u xx xxxx //上传该文件 xx 为刚刚自己设定的名字 xxxx 为分支如果没设置的话是 master git pull //获取更新远程仓库版本到本地仓库 CMD 简单操作 dir 当前文件下的内容 cd xxx 查找 ls 当前位置 cls 清理屏幕 Ctrl+C 强行退出 cd .. 是退到前一目录 ipconfig 查看 ip 地址 Markdown 实例123456标题：# &#x2F;&#x2F;一级## &#x2F;&#x2F;二级### &#x2F;&#x2F;三级#### &#x2F;&#x2F;四级##### &#x2F;&#x2F;五级 //一级//二级//三级//四级//五级12345678&#x2F;&#x2F;加粗**xxx**&#x2F;&#x2F;代码高亮&#x3D;&#x3D;xxx&#x3D;&#x3D;&#x2F;&#x2F;删除线~~xxx~~&#x2F;&#x2F;斜体*xxx* //加粗xxx//代码高亮==xxx==//删除线xxx//斜体斜体 1234&#x2F;&#x2F;引用方法&gt;&gt;&gt;&gt;&gt;&gt; 123&#x2F;&#x2F;分割线有两种---***","categories":[],"tags":[]}]}